{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akademie\\\\Desktop\\\\KochBuch\\\\EatForFit\\\\screens\\\\Salatbar2.js\";\nimport React, { useContext, useState } from 'react';\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { zutaten } from \"../utils/tempDataList\";\nexport default function Salatbar2(_ref) {\n  var _this = this;\n\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var receipeID = route.params.receipeID;\n  console.log(\"*** Search start ***\");\n  console.log(\"We got: \" + receipeID);\n  var zutaten2 = [];\n  console.log('Number of elements: ' + zutaten.length);\n  var indexID = 0;\n\n  for (var i = 0; i < zutaten.length; i++) {\n    console.log(\"Recipe number: \" + i);\n    console.log(zutaten[i].receipeID);\n\n    if (receipeID == zutaten[i].receipeID) {\n      console.log(\"Gefunden mit index \" + i);\n      indexID = i;\n      zutaten2.push(zutaten[i]);\n    } else {\n      console.log(\"Nicht gefunden\");\n    }\n  }\n\n  console.log(\"*** Search end ***\");\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, React.createElement(SectionList, {\n    sections: zutaten2,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(View, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, React.createElement(Text, {\n        style: {\n          fontSize: 18\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }\n      }, item.menge, item.einheit, \" \", item.zutat));\n    },\n    renderSectionHeader: function renderSectionHeader(_ref3) {\n      var section = _ref3.section;\n      return React.createElement(View, {\n        style: styles.sectionHeaderStyle,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }\n      }, React.createElement(Image, {\n        style: styles.image,\n        source: section.image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }\n      }), React.createElement(Text, {\n        style: {\n          fontSize: 22,\n          fontWeight: \"bold\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }\n      }, section.name), React.createElement(Text, {\n        style: {\n          fontSize: 12\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }\n      }, section.time, \", \", section.gerichtstyp), React.createElement(Text, {\n        style: {\n          fontSize: 18,\n          fontWeight: \"bold\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }\n      }, \"Zutaten\"), React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }\n      }, \"---------------------------------------------------------------------------------------------------------------------\"));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.button,\n    onPress: function onPress() {\n      navigation.navigate('Zubereitung', {\n        indexID: indexID\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Zubereitung\"))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sectionHeaderStyle: {\n    backgroundColor: 'white',\n    justifyContent: 'center',\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    width: 480\n  },\n  image: {\n    width: 480,\n    height: 280,\n    paddingHorizontal: 5,\n    paddingVertical: 60,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    backgroundColor: 'salmon',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 10,\n    paddingVertical: 15,\n    width: 150,\n    margin: 3,\n    borderRadius: 12\n  },\n  text2: {\n    color: 'white',\n    fontSize: 20,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Akademie/Desktop/KochBuch/EatForFit/screens/Salatbar2.js"],"names":["React","useContext","useState","zutaten","Salatbar2","route","navigation","receipeID","params","console","log","zutaten2","length","indexID","i","push","styles","container","item","fontSize","menge","einheit","zutat","section","sectionHeaderStyle","image","fontWeight","name","time","gerichtstyp","button","navigate","text2","StyleSheet","create","flex","color","alignItems","justifyContent","backgroundColor","paddingHorizontal","paddingVertical","width","height","margin","borderRadius"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { SectionList, TextInput, TouchableOpacity, StyleSheet, View, Text, Image } from 'react-native';\r\n\r\nimport { zutaten } from '../utils/tempDataList';\r\n\r\nexport default function Salatbar2({ route, navigation }) {\r\n\r\n    const { receipeID } = route.params;\r\n\r\n    console.log(\"*** Search start ***\")\r\n\r\n    console.log(\"We got: \" +receipeID)\r\n\r\n    var zutaten2 = []\r\n\r\n    console.log('Number of elements: ' +zutaten.length)\r\n\r\n    var indexID = 0\r\n\r\n    for(var i = 0; i < zutaten.length; i++){\r\n        console.log(\"Recipe number: \" +i)\r\n        console.log(zutaten[i].receipeID)\r\n        if(receipeID == zutaten[i].receipeID){\r\n            console.log(\"Gefunden mit index \" +i)\r\n            indexID = i\r\n            zutaten2.push(zutaten[i])\r\n            } else {console.log(\"Nicht gefunden\")}\r\n        }\r\n     \r\n        console.log(\"*** Search end ***\")\r\n   \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n          \r\n                      \r\n            <SectionList\r\n                sections={zutaten2}\r\n                renderItem={({ item }) =>\r\n                    <View>\r\n                                   \r\n                        <Text style={{ fontSize: 18 }}>    \r\n                            \r\n                            {item.menge}\r\n                            {item.einheit} {item.zutat}\r\n                  \r\n\r\n                        </Text>\r\n                    </View>\r\n                }\r\n\r\n                renderSectionHeader={({ section }) =>\r\n                    <View style={styles.sectionHeaderStyle}>\r\n                        <Image style={styles.image} source={section.image} />    \r\n                        <Text style={{ fontSize: 22,  fontWeight: \"bold\"}}> \r\n                        {section.name}\r\n                        </Text>\r\n                        <Text style={{ fontSize: 12 }}>\r\n                         {section.time}, {section.gerichtstyp}\r\n                        </Text>\r\n                        <Text style={{ fontSize: 18, fontWeight: \"bold\" }}>\r\n                Zutaten \r\n             </Text>\r\n            <Text>---------------------------------------------------------------------------------------------------------------------</Text>  \r\n                    </View>\r\n                }\r\n            />\r\n\r\n            <View>\r\n                <TouchableOpacity style = {styles.button}\r\n                onPress={() => { navigation.navigate('Zubereitung', {indexID: indexID}) }}>\r\n                <Text style={styles.text2}>Zubereitung</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n\r\n    sectionHeaderStyle: {\r\n        backgroundColor: 'white',\r\n        // alignItems: 'left',\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 5,\r\n        paddingVertical: 10,\r\n        width: 480,\r\n    },\r\n    image: {\r\n        width: 480,\r\n        height: 280,\r\n        paddingHorizontal: 5,\r\n        paddingVertical: 60,\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    button: {\r\n        backgroundColor: 'salmon',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 10,\r\n        paddingVertical: 15,\r\n        width: 150,\r\n        margin: 3,\r\n        borderRadius: 12,\r\n\r\n\r\n    }, \r\n    text2: {\r\n        //fontFamily: 'cursive',\r\n        color: 'white',\r\n        fontSize: 20,\r\n        fontWeight: \"bold\"\r\n\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}