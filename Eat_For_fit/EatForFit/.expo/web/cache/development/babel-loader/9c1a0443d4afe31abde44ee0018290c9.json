{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Akademie\\\\Desktop\\\\KochBuch\\\\EatForFit\\\\App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { DataContext, loadData, saveData, clearData } from \"./utils/DataManager\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\nimport HomeRoute from \"./routes/HomeRoute\";\nimport ReceipeRoute from \"./routes/ReceipeRoute\";\nimport CalenderRoute from \"./routes/CalenderRoute\";\nimport ProfileRoute from \"./routes/ProfileRoute\";\nimport SettingsRoute from \"./routes/SettingsRoute\";\nimport { FontAwesome } from '@expo/vector-icons';\nimport { user, shoppinglist, categories, zutaten } from \"./utils/tempDataList\";\nimport { User } from \"./classes/user\";\nimport { AppLoading } from 'expo';\nimport { useFonts } from 'expo-font';\nimport { insertUser, getUserByKey, saveUser } from \"./utils/UserController\";\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      USER = _useState2[0],\n      setUserData = _useState2[1];\n\n  var _useFonts = useFonts({}),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      fontsLoaded = _useFonts2[0];\n\n  var _useState3 = useState(categories),\n      _useState4 = _slicedToArray(_useState3, 2),\n      CATEGORIES = _useState4[0],\n      setCategoryData = _useState4[1];\n\n  var _useState5 = useState(zutaten),\n      _useState6 = _slicedToArray(_useState5, 2),\n      ZUTATEN = _useState6[0],\n      setZutatenData = _useState6[1];\n\n  if (!fontsLoaded) {\n    return React.createElement(AppLoading, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(DataContext.Provider, {\n    value: {\n      CATEGORIES: CATEGORIES,\n      ZUTATEN: ZUTATEN\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }\n  }, React.createElement(PaperProvider, {\n    theme: _objectSpread(_objectSpread({}, DefaultTheme), {}, {\n      colors: _objectSpread(_objectSpread({}, DefaultTheme.colors), {}, {\n        primary: '#72D3FF'\n      })\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }, React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      activeTintColor: '#72D3FF',\n      showLabel: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: HomeRoute,\n    options: {\n      tabBarLabel: 'Home',\n      tabBarIcon: function tabBarIcon(_ref) {\n        var color = _ref.color,\n            size = _ref.size;\n        return React.createElement(FontAwesome, {\n          name: \"home\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Receipes\",\n    component: ReceipeRoute,\n    options: {\n      tabBarLabel: 'Rezepte',\n      tabBarIcon: function tabBarIcon(_ref2) {\n        var color = _ref2.color,\n            size = _ref2.size;\n        return React.createElement(FontAwesome, {\n          name: \"book\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Calender\",\n    component: CalenderRoute,\n    options: {\n      tabBarLabel: 'Kalender',\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var color = _ref3.color,\n            size = _ref3.size;\n        return React.createElement(FontAwesome, {\n          name: \"calendar\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Profile\",\n    component: ProfileRoute,\n    options: {\n      tabBarLabel: 'Profil',\n      tabBarIcon: function tabBarIcon(_ref4) {\n        var color = _ref4.color,\n            size = _ref4.size;\n        return React.createElement(FontAwesome, {\n          name: \"user-circle\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsRoute,\n    options: {\n      tabBarLabel: 'Einstellungen',\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var color = _ref5.color,\n            size = _ref5.size;\n        return React.createElement(FontAwesome, {\n          name: \"cog\",\n          color: color,\n          size: size,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  })))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#323232',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/Akademie/Desktop/KochBuch/EatForFit/App.js"],"names":["React","useEffect","useState","DataContext","loadData","saveData","clearData","NavigationContainer","createBottomTabNavigator","DefaultTheme","Provider","PaperProvider","HomeRoute","ReceipeRoute","CalenderRoute","ProfileRoute","SettingsRoute","FontAwesome","user","shoppinglist","categories","zutaten","User","AppLoading","useFonts","insertUser","getUserByKey","saveUser","Tab","App","undefined","USER","setUserData","fontsLoaded","CATEGORIES","setCategoryData","ZUTATEN","setZutatenData","colors","primary","activeTintColor","showLabel","tabBarLabel","tabBarIcon","color","size","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { SafeAreaView, StyleSheet, View, Text } from 'react-native';\r\nimport { DataContext, loadData, saveData, clearData } from './utils/DataManager';\r\n\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\r\nimport { DefaultTheme, Provider as PaperProvider } from 'react-native-paper';\r\n\r\nimport HomeRoute from './routes/HomeRoute';\r\nimport ReceipeRoute from './routes/ReceipeRoute';\r\nimport CalenderRoute from './routes/CalenderRoute';\r\nimport ProfileRoute from './routes/ProfileRoute';\r\nimport SettingsRoute from './routes/SettingsRoute';\r\n\r\nimport { FontAwesome } from '@expo/vector-icons';\r\n\r\nimport { user, shoppinglist, categories,zutaten } from './utils/tempDataList';\r\nimport {User} from './classes/user';\r\n\r\nimport { AppLoading } from 'expo';\r\nimport { useFonts } from 'expo-font';\r\nimport { insertUser, getUserByKey, saveUser } from './utils/UserController';\r\n\r\nconst Tab = createBottomTabNavigator();\r\n\r\nexport default function App() {\r\n  const [USER, setUserData] = useState(undefined);\r\n  let [fontsLoaded] = useFonts({\r\n    //'Test': require('./assets/fonts/test.ttf'),\r\n  });\r\n\r\n\r\n  //Async Load / Datenbankanbindung3\r\n  /*useEffect(() => {\r\n    const fetch = async () => {\r\n      //await clearData(\"userKey\");\r\n      let userKey = await loadData(\"userKey\");\r\n      console.log(userKey);\r\n      let dbUser = undefined;\r\n      if(userKey == null){\r\n        dbUser = await insertUser();\r\n        await saveData(\"userKey\", dbUser.userKey);\r\n      }\r\n      else{\r\n        dbUser = await getUserByKey(userKey);\r\n        console.log(dbUser);\r\n      }\r\n      console.log(dbUser)\r\n      setUserData(dbUser)      \r\n    }\r\n    fetch()\r\n  }, [])*/\r\n\r\n  /*useEffect(() => {\r\n    let user = new User(0, 'awödlkawid', 'Bernd', 'Hubinger', new Date(9876543210135));\r\n    const fetch = async () => {\r\n      let users = await getAllUsers()\r\n      console.log(users)\r\n    }\r\n    fetch()\r\n  }, [])*/\r\n\r\n  /*const [USER, setUserData] = useState(\r\n    () => {\r\n      const fetch = async () => {\r\n        let load = await loadData('user');\r\n        load != null ? setUserData(load) : setUserData(user)\r\n      };\r\n      fetch()\r\n    }\r\n  );*/\r\n  \r\n  //Predefined List\r\n\r\n  const [CATEGORIES, setCategoryData] = useState(categories);\r\n  const [ZUTATEN, setZutatenData] = useState(zutaten);\r\n\r\n\r\n  if (!fontsLoaded) {\r\n    return <AppLoading />;\r\n  }\r\n\r\n  return (\r\n    <DataContext.Provider\r\n      value={\r\n        {\r\n          CATEGORIES: CATEGORIES,\r\n          ZUTATEN: ZUTATEN,\r\n        }\r\n      }>\r\n      <PaperProvider theme={{ ...DefaultTheme, \r\n        colors: { ...DefaultTheme.colors, primary: '#72D3FF' },\r\n      }}>\r\n        <NavigationContainer>\r\n          <Tab.Navigator\r\n            //drawerContentOptions={{ inactiveTintColor: 'white', labelStyle: { fontSize: 24 }, }}\r\n            tabBarOptions={{\r\n              activeTintColor: '#72D3FF',\r\n              showLabel: false,\r\n            }}\r\n          >\r\n            <Tab.Screen\r\n              name=\"Home\"\r\n              component={HomeRoute}\r\n              options={{\r\n                tabBarLabel: 'Home',\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <FontAwesome name=\"home\" color={color} size={size} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Receipes\"\r\n              component={ReceipeRoute}\r\n              options={{\r\n                tabBarLabel: 'Rezepte',\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <FontAwesome name=\"book\" color={color} size={size} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Calender\"\r\n              component={CalenderRoute}\r\n              options={{\r\n                tabBarLabel: 'Kalender',\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <FontAwesome name=\"calendar\" color={color} size={size} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Profile\"\r\n              component={ProfileRoute}\r\n              options={{\r\n                tabBarLabel: 'Profil',\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <FontAwesome name=\"user-circle\" color={color} size={size} />\r\n                ),\r\n              }}\r\n            />\r\n            <Tab.Screen\r\n              name=\"Settings\"\r\n              component={SettingsRoute}\r\n              options={{\r\n                tabBarLabel: 'Einstellungen',\r\n                tabBarIcon: ({ color, size }) => (\r\n                  <FontAwesome name=\"cog\" color={color} size={size} />\r\n                ),\r\n              }}\r\n            />\r\n          </Tab.Navigator>\r\n        </NavigationContainer>\r\n      </PaperProvider>\r\n    </DataContext.Provider>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#323232',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n  },\r\n});\r\n"]},"metadata":{},"sourceType":"module"}