{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React from 'react';\nexport var DataContext = React.createContext();\nexport var saveData = function saveData(key, value) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function saveData$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          jsonValue = JSON.stringify(value);\n          _context.next = 4;\n          return _regeneratorRuntime.awrap(AsyncStorage.setItem(key, jsonValue));\n\n        case 4:\n          return _context.abrupt(\"return\", value);\n\n        case 7:\n          _context.prev = 7;\n          _context.t0 = _context[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};\nexport var loadData = function loadData(key) {\n  var jsonValue;\n  return _regeneratorRuntime.async(function loadData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return _regeneratorRuntime.awrap(AsyncStorage.getItem(key));\n\n        case 3:\n          jsonValue = _context2.sent;\n          return _context2.abrupt(\"return\", jsonValue != null ? JSON.parse(jsonValue) : null);\n\n        case 7:\n          _context2.prev = 7;\n          _context2.t0 = _context2[\"catch\"](0);\n\n        case 9:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, [[0, 7]], Promise);\n};","map":{"version":3,"sources":["C:/Users/Akademie/Desktop/KochBuch/EatForFit/utils/DataManager.js"],"names":["AsyncStorage","React","DataContext","createContext","saveData","key","value","jsonValue","JSON","stringify","setItem","loadData","getItem","parse"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,IAAMC,WAAW,GAAGD,KAAK,CAACE,aAAN,EAApB;AAEP,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAAOC,GAAP,EAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEVC,UAAAA,SAFU,GAEEC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAFF;AAAA;AAAA,2CAGVN,YAAY,CAACU,OAAb,CAAqBL,GAArB,EAA0BE,SAA1B,CAHU;;AAAA;AAAA,2CAITD,KAJS;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB;AAUP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,CAAON,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CAEQL,YAAY,CAACY,OAAb,CAAqBP,GAArB,CAFR;;AAAA;AAEVE,UAAAA,SAFU;AAAA,4CAGTA,SAAS,IAAI,IAAb,GAAoBC,IAAI,CAACK,KAAL,CAAWN,SAAX,CAApB,GAA4C,IAHnC;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAjB","sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\r\nimport React from 'react';\r\n\r\nexport const DataContext = React.createContext();\r\n\r\nexport const saveData = async (key, value) => {\r\n    try {\r\n        const jsonValue = JSON.stringify(value)\r\n        await AsyncStorage.setItem(key, jsonValue)\r\n        return value;\r\n    } catch (e) {\r\n        // saving error\r\n    }\r\n}\r\n\r\nexport const loadData = async (key) => {\r\n    try {\r\n        const jsonValue = await AsyncStorage.getItem(key)\r\n        return jsonValue != null ? JSON.parse(jsonValue) : null;\r\n    } catch (e) {\r\n        // error reading value\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}