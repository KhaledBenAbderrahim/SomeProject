{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Akademie\\\\Desktop\\\\KochBuch\\\\EatForFit\\\\screens\\\\NeuesRezept.js\";\nimport React, { useContext, useState } from 'react';\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport { CameraOutlined, MessageOutlined } from '@ant-design/icons';\nimport { categories } from \"../utils/tempDataList\";\nimport { gerichtstyp } from \"../utils/tempDataList\";\nimport { Feather } from '@expo/vector-icons';\nexport default function NeuesRezept(_ref) {\n  var _this = this;\n\n  var route = _ref.route;\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Name des Gerichts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker, {\n    style: styles.textInput,\n    mode: \"dropdown\",\n    onValueChange: function onValueChange() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, gerichtstyp.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      label: item,\n      value: index,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 29\n      }\n    });\n  })), React.createElement(Picker, {\n    style: styles.textInput,\n    mode: \"dropdown\",\n    onValueChange: function onValueChange() {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, categories.map(function (item, index) {\n    return React.createElement(Picker.Item, {\n      label: item.name,\n      value: index,\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 29\n      }\n    });\n  })), React.createElement(Text, {\n    style: styles.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Zutat: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Zutat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, \"Menge: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Menge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, \"Einheit: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Einheit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"Zubereitung: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Zubereitung\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: styles.text1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, \"Vorbereitungszeit: \"), React.createElement(TextInput, {\n    style: styles.textInput,\n    placeholder: \"Minuten\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: styles.button,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.text2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"REZEPT SPEICHERN\")));\n}\nvar styles = StyleSheet.create({\n  container: {\n    color: 'white',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  alignedInARow: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingVertical: 1\n  },\n  image: {\n    width: 30,\n    height: 30\n  },\n  button: {\n    backgroundColor: 'deepskyblue',\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 20,\n    paddingVertical: 10,\n    width: 200,\n    margin: 10\n  },\n  textInput: {\n    color: 'black',\n    fontSize: 10,\n    alignItems: 'center',\n    justifyContent: 'center',\n    paddingHorizontal: 1,\n    paddingVertical: 5,\n    width: 200,\n    margin: 3,\n    borderRadius: 0,\n    borderWidth: 2,\n    borderColor: 'black'\n  },\n  text1: {\n    color: 'deepskyblue',\n    fontSize: 10\n  },\n  text2: {\n    color: 'white',\n    fontSize: 10,\n    fontWeight: \"bold\"\n  }\n});","map":{"version":3,"sources":["C:/Users/Akademie/Desktop/KochBuch/EatForFit/screens/NeuesRezept.js"],"names":["React","useContext","useState","CameraOutlined","MessageOutlined","categories","gerichtstyp","Feather","NeuesRezept","route","styles","container","textInput","map","item","index","name","text1","button","text2","StyleSheet","create","color","alignItems","justifyContent","alignedInARow","flex","flexDirection","paddingVertical","image","width","height","backgroundColor","paddingHorizontal","margin","fontSize","borderRadius","borderWidth","borderColor","fontWeight"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { TextInput, TouchableOpacity, StyleSheet, View, Text, Picker } from 'react-native';\r\nimport { CameraOutlined, MessageOutlined } from '@ant-design/icons';\r\nimport { categories } from '../utils/tempDataList';\r\nimport { gerichtstyp } from '../utils/tempDataList';\r\nimport { Feather } from '@expo/vector-icons'; \r\n\r\nexport default function NeuesRezept({ route }) {\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Name des Gerichts\"\r\n            />\r\n            {/* <View style={styles.alignedInARow}>\r\n                <CameraOutlined style={{ fontSize: '20px', color: 'grey' }}/> \r\n                <Text style={styles.text1}> Foto hinzufugen: </Text>\r\n            </View> */}\r\n\r\n            <Picker\r\n                style={styles.textInput}\r\n                mode=\"dropdown\"\r\n                onValueChange={() => { }}>\r\n                {gerichtstyp.map((item, index) => {\r\n                    return (<Picker.Item label={item} value={index} key={index} />)\r\n                })}\r\n            </Picker>\r\n            <Picker\r\n                style={styles.textInput}\r\n                mode=\"dropdown\"\r\n                onValueChange={() => { }}>\r\n                {categories.map((item, index) => {\r\n                    return (<Picker.Item label={item.name} value={index} key={index} />)\r\n                })}\r\n            </Picker>\r\n            {/* <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Gerichtstyp\"\r\n            />\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Gerichtsart\"\r\n            /> */}\r\n            <Text style={styles.text1}>Zutat: </Text>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Zutat\"\r\n            />\r\n            <Text style={styles.text1}>Menge: </Text>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Menge\"\r\n            />\r\n            <Text style={styles.text1}>Einheit: </Text>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Einheit\"\r\n            />\r\n            <Text style={styles.text1}>Zubereitung: </Text>\r\n\r\n            {/* <View style={styles.alignedInARow}>\r\n                 <CameraOutlined style={{ fontSize: '20px', color: 'grey' }}/> \r\n                <Text style={styles.text1}> Foto hinzufugen: </Text>\r\n            </View> */}\r\n\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Zubereitung\"\r\n            />\r\n\r\n            <Text style={styles.text1}>Vorbereitungszeit: </Text>\r\n            <TextInput\r\n                style={styles.textInput}\r\n                placeholder=\"Minuten\"\r\n            />\r\n            <TouchableOpacity\r\n                style={styles.button}\r\n            >\r\n                <Text style={styles.text2}>REZEPT SPEICHERN</Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        // flex: 1,\r\n        color: 'white',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    alignedInARow: {\r\n        flex: 1,\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingVertical: 1,\r\n    },\r\n    image: {\r\n        width: 30,\r\n        height: 30\r\n    },\r\n\r\n    button: {\r\n        backgroundColor: 'deepskyblue',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 20,\r\n        paddingVertical: 10,\r\n        width: 200,\r\n        margin: 10,\r\n        // borderRadius: 0,\r\n        // borderWidth: 2,\r\n        // borderColor: 'dimgray'\r\n\r\n    },\r\n\r\n    textInput: {\r\n        //fontFamily: 'cursive',\r\n        color: 'black',\r\n        fontSize: 10,\r\n        //fontWeight: \"bold\"\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        paddingHorizontal: 1,\r\n        paddingVertical: 5,\r\n        width: 200,\r\n        margin: 3,\r\n        borderRadius: 0,\r\n        borderWidth: 2,\r\n        borderColor: 'black'\r\n\r\n    },\r\n    text1: {\r\n        // fontFamily: 'cursive',\r\n        color: 'deepskyblue',\r\n        fontSize: 10,\r\n        // fontWeight: \"bold\"\r\n\r\n    },\r\n\r\n    text2: {\r\n        // fontFamily: 'cursive',\r\n        color: 'white',\r\n        fontSize: 10,\r\n        fontWeight: \"bold\"\r\n\r\n    },\r\n\r\n});"]},"metadata":{},"sourceType":"module"}